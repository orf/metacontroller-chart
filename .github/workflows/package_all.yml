name: Release All Charts

on:
  push:

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - v2.0.12
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: metacontroller/metacontroller
          ref: ${{ matrix.tag }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Install releaser
        run: |
          mkdir -p $HOME/cr/
          curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.2.1/chart-releaser_1.2.1_linux_amd64.tar.gz"
          tar -xzf cr.tar.gz -C "$HOME/cr/"
          rm -f cr.tar.gz

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            try {
              await github.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "refs/tags/${{ matrix.tag }}",
                sha: context.sha
              })
            } catch (e) {
              console.log(e);
            }

      - name: Package
        if: always()
        run: |
          $HOME/cr/cr package "deploy/helm/metacontroller/" --package-path .cr-release-packages
          echo
          $HOME/cr/cr upload -o orf -r metacontroller-chart
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"


#      - name: Run chart-releaser
#        uses: helm/chart-releaser-action@v1.2.1
#        with:
#          charts_dir: "deploy/helm/"
#        env:
#          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
